"use strict";angular.module("App",["ngRoute","ngAnimate","ngSanitize","ui.bootstrap","mgcrea.ngStrap","pascalprecht.translate","victorqueiroz.ngPaginator","App/Routes","App/Controllers","App/Filters","App/Directives","App/Services","App/Partials","Auth"]).constant("_CSRF",angular.element(document.querySelector("meta[name=_csrf]")).attr("content")).config(["$httpProvider","_CSRF",function(t,e){t.defaults.headers.common={"x-csrf-token":e}}]).run(["$io",function(t){t.socket.then(function(){})}]);
"use strict";angular.module("App/Controllers",["User/Controllers","Post/Controllers"]);
"use strict";angular.module("App/Directives",["Auth/Directives"]);
"use strict";angular.module("App/Filters",[]);
"use strict";angular.module("App/Routes",["ngRoute","User/Routes","Post/Routes"]).config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"index.tpl.html"}).when("/about-us",{templateUrl:"about-us.tpl.html"}).when("/authentication",{templateUrl:"authentication.tpl.html",controller:"AuthCtrl",guest:!0}).otherwise({redirectTo:"/"}),e.html5Mode(!0)}]);
"use strict";angular.module("App/Services",["User/Services"]).value("version","0.0.1").factory("$io",["$window","$q",function(e,r){var n=function(){var n=r.defer();return n.resolve(e.io),n.promise};return{socket:n().then(function(e){var r=e.connect();return r})}}]);
"use strict";angular.module("Auth/Service",["ngCookies","Session"]);
"use strict";angular.module("Auth/Directive/IfAuthenticated",["Session/Service"]).directive("ifAuthenticated",["Session",function(e){return{link:function(t,i){e.isAuthenticated.then(function(e){e.result||i.remove()})}}}]);
"use strict";angular.module("Auth/Directive/IfGuest",["Session/Service"]).directive("ifGuest",["Session",function(e){return{link:function(t,i){e.isAuthenticated.then(function(e){e.result&&i.remove()})}}}]);
"use strict";angular.module("Auth/Directives",["Auth/Directive/IfAuthenticated","Auth/Directive/IfGuest"]);
"use strict";angular.module("Auth",["ngRoute","Session/Service"]).run(["$rootScope","$route","$location","Session",function(o,e,t,n){o.$on("$routeChangeStart",function(o,e){var a=e.$$route;console.log("Checking if you can access this location...");var s=n.isAuthenticated;a.guest?(console.log("This route are reserved for guests!"),console.log("Checking if you are a guest..."),s.then(function(o){o.result?(console.log("You are not a guest."),console.log("You can not access this area."),t.path("/")):o.result||console.log("You are a guest, you can go on!")})):a.authenticated&&(console.log("This route are reserved for authenticated users!"),console.log("Checking if you are authenticated..."),s.then(function(o){o.result?o.result&&console.log("You are authenticated, you can go on!"):(console.log("You are not authenticated."),console.log("You can not access this area."),t.path("/"))}))})}]);
"use strict";angular.module("Post/Service",["ngResource"]).factory("Post",["$resource",function(r){return r("",{},{get:{url:"/api/posts/:id",params:{id:"@id"},method:"GET",isArray:!1},list:{url:"/api/posts",params:{},method:"GET",isArray:!1},store:{url:"/api/posts",params:{},method:"POST",isArray:!1},update:{url:"/api/posts/:id",params:{id:"@id"},method:"PUT",isArray:!1},destroy:{url:"/api/posts/:id",params:{id:"@id"},method:"DELETE",isArray:!1}})}]);
"use strict";angular.module("Post/Ctrl/PostCreate",["ngRoute","Post/Service"]).controller("PostCreateCtrl",["$scope","$location","$io","Post",function(t,o,e,n){t.storePost=function(t){var t=new n(t);t.$store().then(function(t){t&&(e.socket.then(function(o){o.emit("post new",t.id)}),o.path("/posts/"+(t.id?t.id:"")))})}}]);
"use strict";angular.module("Post/Ctrl/PostDetail",["ngRoute","Post/Service"]).controller("PostDetailCtrl",["$scope","$routeParams","Post",function(t,o,e){t.post=e.get({id:o.id})}]);
"use strict";angular.module("Post/Ctrl/PostList",["Post/Service","App/Services"]).controller("PostListCtrl",["$scope","$io","Post",function(t,o,e){t.$watch("paginator.perPage",function(){t.$broadcast("posts paginator reload")}),t.$on("posts page changed",function(o,a,n){n.perPage<1&&(n.perPage=4),e.list({page:a,per_page:n.perPage}).$promise.then(function(o){t.posts=o.data,angular.extend(n,o)})}),o.socket.then(function(o){o.on("post new",function(){t.$broadcast("posts paginator reload")})})}]);
"use strict";angular.module("Post/Controllers",["Post/Ctrl/PostList","Post/Ctrl/PostDetail","Post/Ctrl/PostCreate"]);
"use strict";angular.module("Post/Routes",["Post/Controllers"]).config(["$routeProvider",function(t){t.when("/posts",{templateUrl:"posts/list.tpl.html",controller:"PostListCtrl"}).when("/posts/create",{templateUrl:"posts/create.tpl.html",controller:"PostCreateCtrl"}).when("/posts/:id",{templateUrl:"posts/show.tpl.html",controller:"PostDetailCtrl"})}]);
"use strict";angular.module("Post/Services",["ngResource","Post/Service"]);
"use strict";angular.module("Session/Service",["ngCookies"]).factory("Session",["$http","$cookieStore",function(t){var e=t.get("/auth/check");return{isAuthenticated:e.then(function(t){return t.data.result?{result:!0}:{result:!1}}),getUser:e.then(function(t){return t.data.result?t.data.user:{result:!1}})}}]);
"use strict";angular.module("Session",["Session/Service"]);
"use strict";angular.module("User/Ctrl/Auth",["App/Services"]).controller("AuthCtrl",["$scope","$http","$alert","$io","$location","$window",function(t,e,n,o,a,r){o.socket.then(function(t){t.on("user authenticated",function(t){alert("Congratulations, "+t.username+", you're logged!")}),t.on("user unauthorized",function(){alert("Sorry, you can not access this area!")}),t.on("user authentication error",function(){alert("Ocorreu um erro, tente novamente mais tarde!")})}),t.authenticate=function(t){e.post("/auth/local",t).then(function(t){var e=t.data;o.socket.then(function(n){t.data.result||n.emit("user unauthorized",{}),e.username?(n.emit("user authenticated",e),a.path("/")):n.emit("user authentication error",{})})})},t.authenticateWithFB=function(){r.location.href="/auth/facebook"}}]);
"use strict";angular.module("User/Ctrl/Profile",["Session/Service"]).controller("ProfileCtrl",["$scope","Session",function(e,r){r.getUser.then(function(r){e.user=r})}]);
"use strict";angular.module("User/Service",["ngResource"]).factory("User",["$resource",function(r){return r("",{},{get:{url:"/api/users/:id",params:{id:"@id"},method:"GET",isArray:!1},list:{url:"/api/users",params:{},method:"GET",isArray:!0},store:{url:"/api/users",params:{},method:"POST",isArray:!1},update:{url:"/api/users/:id",params:{id:"@id"},method:"PUT",isArray:!1},destroy:{url:"/api/users/:id",params:{id:"@id"},method:"DELETE",isArray:!1}})}]);
"use strict";angular.module("User/Ctrl/UserCreate",["ngRoute","User/Service"]).controller("UserCreateCtrl",["$scope","$location","User",function(e,r,t){e.storeUser=function(e){var e=new t(e);e.$store().then(function(e){e&&r.path("/users/"+(e.id?e.id:""))})}}]);
"use strict";angular.module("User/Ctrl/UserDetail",["ngRoute","User/Service"]).controller("UserDetailCtrl",["$scope","$routeParams","User",function(e,r,t){e.user=t.get({id:r.id})}]);
"use strict";angular.module("User/Ctrl/UserList",["User/Service"]).controller("UserListCtrl",["$scope","User",function(r,s){r.users=s.list()}]);
"use strict";angular.module("User/Controllers",["User/Ctrl/Auth","User/Ctrl/Profile","User/Ctrl/UserList","User/Ctrl/UserCreate","User/Ctrl/UserDetail"]);
"use strict";angular.module("User/Routes",["User/Controllers"]).config(["$routeProvider",function(e){e.when("/users/:id",{templateUrl:"users/show.tpl.html",controller:"UserDetailCtrl"}).when("/register",{templateUrl:"users/create.tpl.html",controller:"UserCreateCtrl"}).when("/profile",{templateUrl:"users/profile.tpl.html",controller:"ProfileCtrl"})}]);
"use strict";angular.module("User/Services",["ngResource","User/Service"]);
"use strict";angular.module("Auth/Service",["ngCookies","Session"]);
"use strict";angular.module("Auth/Directive/IfAuthenticated",["Session/Service"]).directive("ifAuthenticated",["Session",function(e){return{link:function(t,i){e.isAuthenticated.then(function(e){e.result||i.remove()})}}}]);
"use strict";angular.module("Auth/Directive/IfGuest",["Session/Service"]).directive("ifGuest",["Session",function(e){return{link:function(t,i){e.isAuthenticated.then(function(e){e.result&&i.remove()})}}}]);
"use strict";angular.module("Auth/Directives",["Auth/Directive/IfAuthenticated","Auth/Directive/IfGuest"]);
"use strict";angular.module("Auth",["ngRoute","Session/Service"]).run(["$rootScope","$route","$location","Session",function(o,e,t,n){o.$on("$routeChangeStart",function(o,e){var a=e.$$route;console.log("Checking if you can access this location...");var s=n.isAuthenticated;a.guest?(console.log("This route are reserved for guests!"),console.log("Checking if you are a guest..."),s.then(function(o){o.result?(console.log("You are not a guest."),console.log("You can not access this area."),t.path("/")):o.result||console.log("You are a guest, you can go on!")})):a.authenticated&&(console.log("This route are reserved for authenticated users!"),console.log("Checking if you are authenticated..."),s.then(function(o){o.result?o.result&&console.log("You are authenticated, you can go on!"):(console.log("You are not authenticated."),console.log("You can not access this area."),t.path("/"))}))})}]);
"use strict";angular.module("Post/Service",["ngResource"]).factory("Post",["$resource",function(r){return r("",{},{get:{url:"/api/posts/:id",params:{id:"@id"},method:"GET",isArray:!1},list:{url:"/api/posts",params:{},method:"GET",isArray:!1},store:{url:"/api/posts",params:{},method:"POST",isArray:!1},update:{url:"/api/posts/:id",params:{id:"@id"},method:"PUT",isArray:!1},destroy:{url:"/api/posts/:id",params:{id:"@id"},method:"DELETE",isArray:!1}})}]);
"use strict";angular.module("Post/Ctrl/PostCreate",["ngRoute","Post/Service"]).controller("PostCreateCtrl",["$scope","$location","$io","Post",function(t,o,e,n){t.storePost=function(t){var t=new n(t);t.$store().then(function(t){t&&(e.socket.then(function(o){o.emit("post new",t.id)}),o.path("/posts/"+(t.id?t.id:"")))})}}]);
"use strict";angular.module("Post/Ctrl/PostDetail",["ngRoute","Post/Service"]).controller("PostDetailCtrl",["$scope","$routeParams","Post",function(t,o,e){t.post=e.get({id:o.id})}]);
"use strict";angular.module("Post/Ctrl/PostList",["Post/Service","App/Services"]).controller("PostListCtrl",["$scope","$io","Post",function(t,o,e){t.$watch("paginator.perPage",function(){t.$broadcast("posts paginator reload")}),t.$on("posts page changed",function(o,a,n){n.perPage<1&&(n.perPage=4),e.list({page:a,per_page:n.perPage}).$promise.then(function(o){t.posts=o.data,angular.extend(n,o)})}),o.socket.then(function(o){o.on("post new",function(){t.$broadcast("posts paginator reload")})})}]);
"use strict";angular.module("Post/Controllers",["Post/Ctrl/PostList","Post/Ctrl/PostDetail","Post/Ctrl/PostCreate"]);
"use strict";angular.module("Post/Routes",["Post/Controllers"]).config(["$routeProvider",function(t){t.when("/posts",{templateUrl:"posts/list.tpl.html",controller:"PostListCtrl"}).when("/posts/create",{templateUrl:"posts/create.tpl.html",controller:"PostCreateCtrl"}).when("/posts/:id",{templateUrl:"posts/show.tpl.html",controller:"PostDetailCtrl"})}]);
"use strict";angular.module("Post/Services",["ngResource","Post/Service"]);
"use strict";angular.module("Session/Service",["ngCookies"]).factory("Session",["$http","$cookieStore",function(t){var e=t.get("/auth/check");return{isAuthenticated:e.then(function(t){return t.data.result?{result:!0}:{result:!1}}),getUser:e.then(function(t){return t.data.result?t.data.user:{result:!1}})}}]);
"use strict";angular.module("Session",["Session/Service"]);
"use strict";angular.module("User/Ctrl/Auth",["App/Services"]).controller("AuthCtrl",["$scope","$http","$alert","$io","$location","$window",function(t,e,n,o,a,r){o.socket.then(function(t){t.on("user authenticated",function(t){alert("Congratulations, "+t.username+", you're logged!")}),t.on("user unauthorized",function(){alert("Sorry, you can not access this area!")}),t.on("user authentication error",function(){alert("Ocorreu um erro, tente novamente mais tarde!")})}),t.authenticate=function(t){e.post("/auth/local",t).then(function(t){var e=t.data;o.socket.then(function(n){t.data.result||n.emit("user unauthorized",{}),e.username?(n.emit("user authenticated",e),a.path("/")):n.emit("user authentication error",{})})})},t.authenticateWithFB=function(){r.location.href="/auth/facebook"}}]);
"use strict";angular.module("User/Ctrl/Profile",["Session/Service"]).controller("ProfileCtrl",["$scope","Session",function(e,r){r.getUser.then(function(r){e.user=r})}]);
"use strict";angular.module("User/Service",["ngResource"]).factory("User",["$resource",function(r){return r("",{},{get:{url:"/api/users/:id",params:{id:"@id"},method:"GET",isArray:!1},list:{url:"/api/users",params:{},method:"GET",isArray:!0},store:{url:"/api/users",params:{},method:"POST",isArray:!1},update:{url:"/api/users/:id",params:{id:"@id"},method:"PUT",isArray:!1},destroy:{url:"/api/users/:id",params:{id:"@id"},method:"DELETE",isArray:!1}})}]);
"use strict";angular.module("User/Ctrl/UserCreate",["ngRoute","User/Service"]).controller("UserCreateCtrl",["$scope","$location","User",function(e,r,t){e.storeUser=function(e){var e=new t(e);e.$store().then(function(e){e&&r.path("/users/"+(e.id?e.id:""))})}}]);
"use strict";angular.module("User/Ctrl/UserDetail",["ngRoute","User/Service"]).controller("UserDetailCtrl",["$scope","$routeParams","User",function(e,r,t){e.user=t.get({id:r.id})}]);
"use strict";angular.module("User/Ctrl/UserList",["User/Service"]).controller("UserListCtrl",["$scope","User",function(r,s){r.users=s.list()}]);
"use strict";angular.module("User/Controllers",["User/Ctrl/Auth","User/Ctrl/Profile","User/Ctrl/UserList","User/Ctrl/UserCreate","User/Ctrl/UserDetail"]);
"use strict";angular.module("User/Routes",["User/Controllers"]).config(["$routeProvider",function(e){e.when("/users/:id",{templateUrl:"users/show.tpl.html",controller:"UserDetailCtrl"}).when("/register",{templateUrl:"users/create.tpl.html",controller:"UserCreateCtrl"}).when("/profile",{templateUrl:"users/profile.tpl.html",controller:"ProfileCtrl"})}]);
"use strict";angular.module("User/Services",["ngResource","User/Service"]);
//# sourceMappingURL=data:application/json;base64,